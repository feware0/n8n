---
description: n8n test project structure and commands
globs:
  - '**/*.spec.ts'
  - '**/*.cy.ts'
alwaysApply: false
---

# n8n Test Project Structure

## Directory Layout

```
n8n/
├── cypress/                                    # Legacy Cypress tests
│   ├── e2e/                                   # Test files (*.cy.ts)
│   ├── fixtures/                              # Test data files
│   ├── pages/                                 # Cypress page objects
│   ├── composables/                           # Cypress composables
│   ├── support/                               # Support files
│   ├── utils/                                 # Cypress utilities
│   └── constants.ts                           # Constants
│
└── packages/testing/playwright/                # Playwright tests
    ├── tests/                                 # Test files (*.spec.ts)
    ├── pages/                                 # Page objects
    ├── workflows/                             # Workflow JSON files
    ├── composables/                           # Test composables
    ├── utils/                                 # Utilities
    ├── fixtures/                              # Test fixtures (base.ts)
    └── CONTRIBUTING.md                        # GOLD STANDARD
```

## Test Commands

```bash
# Run with grep filter and line reporter (PREFERRED)
pnpm test:standard --grep "test name" --reporter=line

# Run all tests in a file
pnpm test:standard --grep "filename.spec.ts" --reporter=line

# Debug with UI
pnpm test:debug

# Run in UI mode
pnpm test:standard --ui --grep "filename.spec.ts"

# Isolated testing
# Terminal 1:
pnpm start:isolated

# Terminal 2:
RESET_E2E_DB=true N8N_BASE_URL=http://localhost:5679 pnpm test:standard --grep "test name" --reporter=line
```

## Cypress Utilities to Check

When migrating, always check these Cypress directories:

```bash
# Check imports
grep "import" cypress/e2e/[test].cy.ts

# Common locations:
cypress/composables/    # Reusable test logic
cypress/support/        # Custom commands
cypress/utils/          # Helper functions
cypress/constants.ts    # Shared constants
```

These may need to be:

1. Ported to Playwright equivalents
2. Found in existing Playwright utils
3. Reimplemented using Playwright patterns

## File Naming Conventions

- Cypress: `feature.cy.ts`
- Playwright: `feature.spec.ts`
- Keep feature names consistent
