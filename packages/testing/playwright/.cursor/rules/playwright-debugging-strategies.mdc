---
description: Debugging strategies for n8n Playwright test failures
globs:
  - 'packages/testing/playwright/tests/**/*.spec.ts'
alwaysApply: false
---

# Playwright Debugging Strategies

## Available Tools

- **Playwright MCP**: Interactive debugging and element inspection
- **Line Reporter**: Real-time test progress visibility
- **UI Mode**: Visual debugging interface

## Debugging Decision Tree

```
Test Failing?
├─> RE-READ THE ORIGINAL CYPRESS TEST
├─> Use Playwright MCP (add page.pause())
├─> Check execution context (NDV vs Canvas)
├─> Verify node names are correct
├─> Check for modal/overlay blocking
├─> Search for existing page methods
└─> Verify workflow fixtures are copied

Can't Find Element?
├─> Use Playwright MCP to inspect
├─> Search Cypress pages for test ID
├─> Check if element is in NDV vs Canvas
├─> Look for timing issues (add waitFor)
└─> Try more general selector
```

## Use Playwright MCP First

Before trial-and-error:

```typescript
test('debug selector', async ({ n8n }) => {
	await n8n.workflows.visit();

	// Add pause to inspect with MCP
	await n8n.page.pause();

	// Use MCP to:
	// - Find correct selectors
	// - Test interactions
	// - Verify element state
});
```

## Check Cypress Implementation

Always compare with original:

```bash
# Find exact Cypress implementation
grep -A10 -B10 "test-name" cypress/e2e/[file].cy.ts

# Check Cypress page objects
grep -r "methodName" cypress/pages/

# Check for test IDs
grep -r "getByTestId.*credential" cypress/pages/
```

## Common Error Patterns

### Modal/Overlay Blocking

- Check for credential modals
- Verify NDV isn't auto-opening
- Look for loading states

### Wrong Test IDs

```typescript
// ❌ Guessing test IDs
getByTestId('input-url-import-workflow');

// ✅ Check Cypress POMs first
getByTestId('workflow-url-import-input');
```

### Missing Workflow Fixtures

```bash
# Error: ENOENT: no such file or directory
# Solution: Copy from Cypress
cp cypress/fixtures/workflow.json packages/testing/playwright/workflows/
```
