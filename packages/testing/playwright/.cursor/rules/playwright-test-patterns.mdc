---
description: Test patterns and best practices for n8n Playwright tests
globs:
  - 'packages/testing/playwright/tests/**/*.spec.ts'
alwaysApply: false
---

# Playwright Test Patterns

## Test Structure

Follow patterns from packages/testing/playwright/CONTRIBUTING.md:

```typescript
import { test, expect } from '../fixtures/base';

test.describe('Feature Name', () => {
	test.beforeEach(async ({ n8n }) => {
		await n8n.goHome();
	});

	test('should perform action', async ({ n8n }) => {
		// Arrange
		await n8n.workflows.visit();

		// Act
		await n8n.someAction();

		// Assert
		await expect(n8n.page.getByText('Success')).toBeVisible();
	});
});
```

## Authentication Patterns

```typescript
// Use tags for auth requirements
test('admin feature @auth:admin', async ({ n8n }) => {
	// Automatically handles authentication
});
```

## Workflow Creation

```typescript
// ❌ Only works with @db:reset
await n8n.workflows.clickNewWorkflowCard();

// ✅ Works in all contexts
await n8n.workflows.clickAddWorkflowButton();
```

## Form Interactions

```typescript
// ❌ Display labels
await page.getByLabel('Credential Name').fill('My Credential');

// ✅ Test IDs or field names
await page.getByTestId('credential-name').fill('My Credential');

// ✅✅ Page object methods
await n8n.credentials.fillCredentialForm('My Credential');
```

## Assertions

```typescript
// Use specific assertions
await expect(element).toBeVisible();
await expect(element).toHaveText('exact text');
await expect(element).toContainText('partial text');

// Avoid generic assertions
await expect(element).toBeTruthy(); // ❌
```

## Search Before Implementing

Always check for existing methods:

```bash
# Priority order:
# 1. Page object methods
grep -r "methodName" packages/testing/playwright/pages/

# 2. Composables
grep -r "feature" packages/testing/playwright/composables/

# 3. Similar tests
grep -r "pattern" packages/testing/playwright/tests/
```
